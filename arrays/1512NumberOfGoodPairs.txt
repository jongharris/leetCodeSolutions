Runtime: 0 ms, faster than 100.00% of Java online submissions for Number of Good Pairs.
Memory Usage: 38.8 MB, less than 15.23% of Java online submissions for Number of Good Pairs.


Solution:
class Solution {
    public int numIdenticalPairs(int[] nums) {
        
        int goodPairs = 0;
        //create a mapping, default value is 0, 101 and never use 0 for sake of cleaner code
        int[] map = new int[101];
        
        //iterate through the nums and map them
        for (int i = 0; i < nums.length; i++) {
            map[nums[i]]++;
        }
        
        for(int i = 0; i < map.length; i++) {
            
            //if a number is set, then check it and apply formula
            if (map[i] > 0) {
                int n = map[i];
                goodPairs = goodPairs + (n * (n-1)) / 2;
            }    
        }
        
        return goodPairs;
    }
}